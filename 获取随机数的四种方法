package cn.itsource._04Random;

import java.util.Random;
import java.util.UUID;
import java.util.concurrent.ThreadLocalRandom;

public class RandomTest {
	/*获取随机数的方式
	 *方式一： Math--->  random（）--[0.0,1.0)
	 *方式二：Random类  描述随机数 nextInt(int i) --[0,i);
	 *方式三：ThreadLocalRandom  nextInt(int s,int e)--[s,e]
	 *方式四：UUID 32位16进制 static UUID randomUUID()    获取类型 4（伪随机生成的）UUID 的静态工厂。 
	 * */
	public static void main(String[] args) {
		//static double random()  返回带正号的 double 值，该值大于等于 0.0 且小于 1.0。 
		//获取1-10的整数
		int i =(int)(Math.random()*10);
		System.out.println(i);
		
		
		//Random()  创建一个新的随机数生成器。
		Random r= new Random();
		// int nextInt(int n)  返回一个伪随机数，它是取自此随机数生成器序列的、在 0（包括）和指定值（不包括）之间均匀分布的 int 值。 
		int int1 = r.nextInt(100);
		System.out.println(int1);
		
		//int nextInt(int origin, int bound) 
		//返回指定的原点 （包容性） 与指定之间的伪随机 int 值绑定 （独家）。  
		//创建对象
		ThreadLocalRandom current = ThreadLocalRandom.current();
		int int2 = current.nextInt(1, 33);
		System.out.println(int2);
		
		
		//UUID的randomUUID()方法获取随机数
		UUID uuid = UUID.randomUUID();
		System.out.println(uuid);
		
	}
	
}
